#!/usr/bin/env python3

# from datetime import datetime as dt
from math import factorial as f
from time import time

from typing import List
from dataclasses import dataclass


"""
export YEAR=$(date "+%Y")

db() {
    printf '%b' "$WARN"
    if [ -n "$1" ]; then
        printf ' -> %s' "$1"
        shift
    fi
    for arg in "$@"; do
        printf ' %s' "$arg"
    done
    printf '%s\n' ''
    }

_end_timer() {
    # profile end time
    t1=$(date "+%s.%n")
    # display script time
    dt=$((t1-t0))
    db '\n%bScript %s took %.3f seconds to load.\n\n' "$GO" "$0" "$dt"
    }

"""

"""
_get_repo_template() {
    #TODO This is a preset template directory - prefer github repo
    repo_template_location=~/Documents/coding/template
    repo_file_list=( README.md .gitignore LICENSE MANIFEST.in Pipfile setup.cfg setup.py )
    for f in $repo_file_list; do
        if [ -e "$f" ]; then
            attn "$f already exists in the destination folder."
        else
            echo "cp -ri" "${repo_template_location}/${f}" "$repo_path" #! not activated ... remove <echo> ...
        fi
    done
"""

"""
    # github repo template
    }
_config() {
    # Setup path names and constants
    [[ $SET_DEBUG == 1 ]] && _set_debug "$@"
    SHELL_BIN="${SHELL##*/}" && export SHELL_BIN

    #TODO - check for $1 repo name, etc
    repo_path=$PWD
    repo_name=${PWD##*/}
    dprintf "\$repo_path = $repo_path"
    dprintf "\$repo_name = $repo_name"
    }
"""
"""
setup_clean_repo():
    pass
    # python3 -m venv .venv
    # git init
    # hub create
    # link static files from template
    # copy and setup unique files
    # git add all
    # pre-commit
    # git commit
    # git pull -rebase
    # git push
"""


"""
main() {
    SET_DEBUG=1
    br
    lime "**************************  Setup Github/Python repo **************************"
    _config "$@"
    dprintf "\$repo_path = $repo_path"
    dprintf "\$repo_name = $repo_name"
    _get_repo_template
    br

    blue "Template location:"
    ls $repo_template_location
    blue "Repo location:"
    ls "$repo_path"
    _end_timer
}

main "$@"
"""
